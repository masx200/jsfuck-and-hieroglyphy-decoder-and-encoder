"use strict";
import hieroglyphy from "./hieroglyphy.js";
import JSFuck from "./jsfuck.js";
var postfixandprefix;
export function getpostfixandprefix() {
    if (postfixandprefix) {
        return postfixandprefix;
    } else {
        postfixandprefix = [
            {
                prefix: "[][(![]+[])[!+[]+!![]+!![]]+([]+{})[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+{})[!+[]+!![]+!![]+!![]+!![]]+([]+{})[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+{})[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+{})[+!![]]+(!![]+[])[+!![]]](",

                postfix: ")()",
            },
            {
                prefix
                postfix: ")()",
            },
            {
                prefix:
                    "[][" +
                    hieroglyphy.hieroglyphyString("sort") +
                    "][" +
                    hieroglyphy.hieroglyphyString("constructor") +
                    "]" +
                    "(",
                postfix: ")()",
            },
            {
                prefix:
                    "[][" +
                    JSFuck.encode("filter") +
                    "]" +
                    "[" +
                    JSFuck.encode("constructor") +
                    "](",
                postfix: ")()",
            },
        ];
        return postfixandprefix;
    }
}
